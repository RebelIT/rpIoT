<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rpIoT</title>
    <link>https://rebelit.github.io/rpIoT/</link>
    <description>Recent content on rpIoT</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 12 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://rebelit.github.io/rpIoT/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>v2.0.0  - Major changes</title>
      <link>https://rebelit.github.io/rpIoT/posts/v2.0.0/</link>
      <pubDate>Fri, 12 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rebelit.github.io/rpIoT/posts/v2.0.0/</guid>
      <description> v2.0.0  Enhancement: All GETs are enabled, POST, PUT, DELETE per endpoint can be toggled in config Enhancement: Added more GETs  new get all gpio pins states endpoint new get single gpio pin state endpoint new get service status endpoint  Enhancement: added shutdown action to power endpoint  POST /api/power/shutdown  Fix: system stats return  system info return proper json key name and CPU Mhz reading  Documentation:  Added tons to to this git pages how to&amp;rsquo;s and endpoints  Simplify code:  removed generic http responses to be more customized per endpoint refactor gpio handlers &amp;amp; actions to use new customized returns refactor hdmi handlers &amp;amp; actions to use new customized returns refactor System Information handlers &amp;amp; actions to use new customized returns refactor Apt Package Manager handlers &amp;amp; actions to use new customized returns refactor Power Control handlers &amp;amp; actions to use new customized returns refactor Service Control handlers &amp;amp; actions to use new customized returns  Issues Resolved in this version:  31 bad sys info return 30 shutdown endpoint 24 more gets 16 more doco   </description>
    </item>
    
    <item>
      <title>v1.0.1  - Enhancement</title>
      <link>https://rebelit.github.io/rpIoT/posts/v1.0.1/</link>
      <pubDate>Thu, 04 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rebelit.github.io/rpIoT/posts/v1.0.1/</guid>
      <description> v1.0.1  Enhancement: new gpio depress button endpoint  added new /api/gpio/{number}/depress/{milliseconds} endpoint to simulate pressing a button  Issues  </description>
    </item>
    
    <item>
      <title>v1.0.0 - Initial Release</title>
      <link>https://rebelit.github.io/rpIoT/posts/v1.0.0/</link>
      <pubDate>Sat, 16 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rebelit.github.io/rpIoT/posts/v1.0.0/</guid>
      <description> v1.0.0  Initial release  Base functionality tested and in use.  Open Issues  </description>
    </item>
    
    <item>
      <title>API Alive</title>
      <link>https://rebelit.github.io/rpIoT/usage/p2_aliveendpoints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rebelit.github.io/rpIoT/usage/p2_aliveendpoints/</guid>
      <description> Headers  Content-Type:Application/json Accept:Application/json auth - see auth doco if auth is enabled  URI Methods  GET /api/alive - http status health check endpoint
 GET http://0.0.0.0:6661/api/alive response: { &amp;quot;status&amp;quot;: &amp;quot;im running fine...&amp;quot; }    </description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://rebelit.github.io/rpIoT/aboutme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rebelit.github.io/rpIoT/aboutme/</guid>
      <description>not sure yet what to tell you about me jsut yet&amp;hellip;</description>
    </item>
    
    <item>
      <title>Authentication and Security</title>
      <link>https://rebelit.github.io/rpIoT/usage/p1_authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rebelit.github.io/rpIoT/usage/p1_authentication/</guid>
      <description>Authentication enabled usage If &amp;quot;auth_enabled&amp;quot;: true you must provide auth headers in each API call * Required headers for all API calls:
 X-API-User:&amp;lt;default_user config value&amp;gt; X-API-Token:&amp;lt;default_user_token config value&amp;gt;   Disabling auth &amp;quot;auth_enabled&amp;quot;: false makes your API wide open to anyone on your network.  SSL enabled usage If &amp;quot;ssl_enabled&amp;quot;: true you must place your cert and key in the install_dir directory. You can use any CA signed cert or a self signed one, as long as you have the key.</description>
    </item>
    
    <item>
      <title>Configuring the API</title>
      <link>https://rebelit.github.io/rpIoT/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rebelit.github.io/rpIoT/configuration/</guid>
      <description>Application Configs service starts up with a set of default configs set to high security. If you wish to override any of these values you must provide a -config=/path/to/api_config.json file with override values.
 Default hard coded values
&amp;quot;install_dir&amp;quot;: &amp;quot;/etc/api/&amp;quot; &amp;quot;api_port&amp;quot;: &amp;quot;8080&amp;quot;, &amp;quot;statsd_host&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;slack_webhook&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;default_user&amp;quot;: &amp;quot;admin&amp;quot;, &amp;quot;default_user_token&amp;quot;: &amp;quot;myPiApi&amp;quot;, &amp;quot;auth_enabled&amp;quot;: true, &amp;quot;ssl_enabled&amp;quot;: true, &amp;quot;ssl_cert_name&amp;quot;: &amp;quot;cert.cert&amp;quot;, &amp;quot;ssl_key_name&amp;quot;: &amp;quot;key.key&amp;quot;, &amp;quot;endpoint_power&amp;quot;: true, &amp;quot;endpoint_packages&amp;quot;: true, &amp;quot;endpoint_service&amp;quot;: true, &amp;quot;endpoint_display&amp;quot;: true, &amp;quot;endpoint_gpio&amp;quot;: true  Options breakdown</description>
    </item>
    
    <item>
      <title>Display Control</title>
      <link>https://rebelit.github.io/rpIoT/usage/p4_hdmiendpoints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rebelit.github.io/rpIoT/usage/p4_hdmiendpoints/</guid>
      <description> Headers  Content-Type:Application/json Accept:Application/json auth - see auth doco if auth is enabled  URI Methods  GET /api/display - returns power state of the HDMI out
 hdmi_state = 0 Off|1 On   GET http://0.0.0.0:6661/api/display response: { &amp;quot;hdmi_state&amp;quot;: 1 }   POST /api/display/{action} - initiates a HDMI power state control
 {action} = on|off   POST http://0.0.0.0:6661/api/display/off response: { &amp;quot;hdmi_state&amp;quot;: 0 }    </description>
    </item>
    
    <item>
      <title>GPIO Pin Control</title>
      <link>https://rebelit.github.io/rpIoT/usage/p3_gpioendpoints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rebelit.github.io/rpIoT/usage/p3_gpioendpoints/</guid>
      <description>Headers  Content-Type:Application/json Accept:Application/json auth - see auth doco if auth is enabled  GPIO Guide Rev 2 and 3 Raspberry Pi Rev 1 Raspberry Pi (legacy) +-----+---------+----------+---------+-----+ +-----+--------+----------+--------+-----+ | BCM | Name | Physical | Name | BCM | | BCM | Name | Physical | Name | BCM | +-----+---------+----++----+---------+-----+ +-----+--------+----++----+--------+-----+ | | 3.3v | 1 || 2 | 5v | | | | 3.3v | 1 || 2 | 5v | | | 2 | SDA 1 | 3 || 4 | 5v | | | 0 | SDA | 3 || 4 | 5v | | | 3 | SCL 1 | 5 || 6 | 0v | | | 1 | SCL | 5 || 6 | 0v | | | 4 | GPIO 7 | 7 || 8 | TxD | 14 | | 4 | GPIO 7 | 7 || 8 | TxD | 14 | | | 0v | 9 || 10 | RxD | 15 | | | 0v | 9 || 10 | RxD | 15 | | 17 | GPIO 0 | 11 || 12 | GPIO 1 | 18 | | 17 | GPIO 0 | 11 || 12 | GPIO 1 | 18 | | 27 | GPIO 2 | 13 || 14 | 0v | | | 21 | GPIO 2 | 13 || 14 | 0v | | | 22 | GPIO 3 | 15 || 16 | GPIO 4 | 23 | | 22 | GPIO 3 | 15 || 16 | GPIO 4 | 23 | | | 3.</description>
    </item>
    
    <item>
      <title>Installing the API on your RaspberryPi</title>
      <link>https://rebelit.github.io/rpIoT/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rebelit.github.io/rpIoT/installation/</guid>
      <description>Install via Ansible NOTE the manual setup steps  You need a working local GOLang environment for ansible to build the project Update ansible_deploy.yml with your local gopath
gopath: &amp;quot;/Users/rebelit/go&amp;quot; goroot: &amp;quot;/usr/local/opt/go/libexec&amp;quot;  Update the ansible_host file with your DNS name or IP
 Run it (depending on your local setup you may not need --ask-sudo-pass)
ansible-playbook ansible_deploy.yml -i ansible_host --ask-sudo-pass   Build with Docker  Build the docker image then run it to compile the app binary.</description>
    </item>
    
    <item>
      <title>Other projects to add-on/support this</title>
      <link>https://rebelit.github.io/rpIoT/addons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rebelit.github.io/rpIoT/addons/</guid>
      <description> Telegraf for metrics  To set up a localhost statsd listener using telegraf and send metrics elsewhere (influx, prometheus, datadog) Telegraf Installation on Raspberry Pi to pull down and install an ARM based telegraf.  Grafana with Influx for viewing metrics  Grafana with InfluxDB on Raspberry Pi  </description>
    </item>
    
    <item>
      <title>Other projects using this API</title>
      <link>https://rebelit.github.io/rpIoT/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rebelit.github.io/rpIoT/projects/</guid>
      <description>Raspberry Pi push button music player  A Wall mounted button hooked to a rPI. Push the button and it plays a random playlist for my kids rpGpMusic Using rpIoT to turn on remotely with GPIO control, system updates and service control. gome alexa integration for central control.  Raspberry Pi digital DAK calendar  Old LCD TV turned into a digital calendar with pictures display, shared google calendars, weather and RSS news feed piDAK Using rpIoT to turn display on and off, system updates and service control.</description>
    </item>
    
    <item>
      <title>Package Manager</title>
      <link>https://rebelit.github.io/rpIoT/usage/p5_packageendpoints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rebelit.github.io/rpIoT/usage/p5_packageendpoints/</guid>
      <description>Headers  Content-Type:Application/json Accept:Application/json auth - see auth doco if auth is enabled  URI Methods  GET /api/apt - returns package install history
 GET http://0.0.0.0:6661/api/apt response: { &amp;quot;log&amp;quot;: [ &amp;quot;&amp;quot;, &amp;quot;Start-Date: 2019-04-05 23:00:42&amp;quot;, &amp;quot;Commandline: apt-get install jq&amp;quot;, &amp;quot;Requested-By: pi (1000)&amp;quot;, &amp;quot;Install: jq:armhf (1.5+dfsg-1.3), libjq1:armhf (1.5+dfsg-1.3, automatic), libonig4:armhf (6.1.3-2, automatic)&amp;quot;, &amp;quot;End-Date: 2019-04-05 23:00:51&amp;quot;, &amp;quot;&amp;quot; ] }   POST /api/apt/{action} - performs a system apt action
 {action} = update|upgrade  POST http://0.</description>
    </item>
    
    <item>
      <title>Power Control</title>
      <link>https://rebelit.github.io/rpIoT/usage/p6_powerendpoints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rebelit.github.io/rpIoT/usage/p6_powerendpoints/</guid>
      <description> Headers  Content-Type:Application/json Accept:Application/json auth - see auth doco if auth is enabled  URI Methods  POST /api/power/{acton} - initiates a system power control
 {action} = reboot|shutdown   POST http://0.0.0.0:6661/api/power/reboot response: { &amp;quot;status&amp;quot;: &amp;quot;async reboot in progress...&amp;quot; }    </description>
    </item>
    
    <item>
      <title>Raspberry Pi IoT Device</title>
      <link>https://rebelit.github.io/rpIoT/home/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rebelit.github.io/rpIoT/home/</guid>
      <description>rpIoT My configurable GOLang based API for a raspberryPi. Used for integrating/controlling rPI&amp;rsquo;s into your home automation or just for general remote management.
 Configure the API (Configuration Options) Install the API (Deploy it) Use the API (Using this project) profit.  About this I originally built this as a home automation add-on. I have multiple rPIs around the house doing various things (wall mounted calendar, magic mirror, piHole, garage door opener, OpenSource thermostat, etc&amp;hellip;).</description>
    </item>
    
    <item>
      <title>Service Control</title>
      <link>https://rebelit.github.io/rpIoT/usage/p7_serviceendpoints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rebelit.github.io/rpIoT/usage/p7_serviceendpoints/</guid>
      <description> Headers  Content-Type:Application/json Accept:Application/json auth - see auth doco if auth is enabled  URI Methods  GET /api/service/{service} - returns status of a systemd service
 GET http://0.0.0.0:6661/api/service/web-api response: { &amp;quot;status&amp;quot;: &amp;quot;active&amp;quot; }   POST /api/service/{service}/{action} - initiates a systemd service control
 {action} = start|stop|restart    POST http://0.0.0.0:6661/api/service/redis/stop response: { &amp;quot;status&amp;quot;: &amp;quot;success&amp;quot; }    </description>
    </item>
    
    <item>
      <title>System Information</title>
      <link>https://rebelit.github.io/rpIoT/usage/p8_systeminfoendpoints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rebelit.github.io/rpIoT/usage/p8_systeminfoendpoints/</guid>
      <description> Headers  Content-Type:Application/json Accept:Application/json auth - see auth doco if auth is enabled  URI Methods  GET /api/system - returns system information
GET http://0.0.0.0:6661/api/system response: { &amp;quot;host&amp;quot;: { &amp;quot;uptime&amp;quot;: &amp;quot;5316&amp;quot;, &amp;quot;kernel_version&amp;quot;: &amp;quot;4.14.79-v7+&amp;quot;, &amp;quot;platform&amp;quot;: &amp;quot;raspbian&amp;quot;, &amp;quot;platform_ver&amp;quot;: &amp;quot;9.6&amp;quot;, &amp;quot;boottime&amp;quot;: &amp;quot;1554780785&amp;quot;, &amp;quot;hostname&amp;quot;: &amp;quot;piDev&amp;quot;, &amp;quot;host_id&amp;quot;: &amp;quot;a336c86e-879f-442d-bf62-00d9f8102c79&amp;quot; }, &amp;quot;cpu&amp;quot;: { &amp;quot;cpu_stats&amp;quot;: [ { &amp;quot;cpu_num&amp;quot;: 0, &amp;quot;mhz&amp;quot;: 1500, &amp;quot;model_name&amp;quot;: &amp;quot;ARMv7 Processor rev 4 (v7l)&amp;quot;, &amp;quot;cores&amp;quot;: 1 }, { &amp;quot;cpu_num&amp;quot;: 1, &amp;quot;mhz&amp;quot;: 1500, &amp;quot;model_name&amp;quot;: &amp;quot;ARMv7 Processor rev 4 (v7l)&amp;quot;, &amp;quot;cores&amp;quot;: 1 }, { &amp;quot;cpu_num&amp;quot;: 2, &amp;quot;mhz&amp;quot;: 1500, &amp;quot;model_name&amp;quot;: &amp;quot;ARMv7 Processor rev 4 (v7l)&amp;quot;, &amp;quot;cores&amp;quot;: 1 }, { &amp;quot;cpu_num&amp;quot;: 3, &amp;quot;mhz&amp;quot;: 1500, &amp;quot;model_name&amp;quot;: &amp;quot;ARMv7 Processor rev 4 (v7l)&amp;quot;, &amp;quot;cores&amp;quot;: 1 } ] }, &amp;quot;mem&amp;quot;: { &amp;quot;total&amp;quot;: &amp;quot;984707072&amp;quot;, &amp;quot;free&amp;quot;: &amp;quot;804564992&amp;quot; }, &amp;quot;disk&amp;quot;: { &amp;quot;total&amp;quot;: 15606296576, &amp;quot;used&amp;quot;: 2544054272, &amp;quot;free&amp;quot;: 12395008000 } }    </description>
    </item>
    
  </channel>
</rss>